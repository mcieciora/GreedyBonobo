import Transaction as Trc
import Payment as Pmt
import utilities as uti
import categories as ctg


def main_menu():
    print('[1] Track transaction\n[2] Record payment\n[3] Show history\n[4] Show statistics\n[5] Add/Remove '
          'category\n[WIP] Update limits\n[WIP] Manage periods')
    menu_change(input('>>>'))


def track_transaction():
    Trc.create_transaction(uti.get_expanse(), uti.get_description(), uti.get_category())
    print('Transaction added successfully!')
    main_menu()


def record_payment():
    Pmt.create_payment(uti.get_payment(), uti.get_description())
    print('Payment added successfully!')
    main_menu()


def history():
    print('Transactions history:')
    for transaction in Trc.get_transaction_history():
        print('{} for {} - {}'.format(transaction.expense, transaction.category, transaction.description))
    print('Payment history:')
    for payment in Pmt.get_payment_history():
        print('{} - {}'.format(payment.payment, payment.description))
    main_menu()


def add_remove_category():
    answer = input('Would you like to [a]add or [r]remove category? ')
    if answer.lower() == 'a':
        ctg.add_category()
    elif answer.lower() == 'r':
        ctg.remove_category()
    else:
        print('There is no such option. Please proper one!')
        return add_remove_category()
    main_menu()


def update_limits():
    pass


def manage_periods():
    pass


def statistics():
    if len(Trc.get_transaction_history()) > 0:
        print('Total: {} out of {} ({}%)'.format(Trc.get_total(), ctg.get_total_of_limits(), ctg.get_total_percentage()))
        print('Savings: {} out of {} ({}%)'.format(Pmt.get_total()-Trc.get_total(), Pmt.get_total(),
                                                   round((Pmt.get_total()-Trc.get_total())/Pmt.get_total()*100, 2)))
        print('Biggest expanse: {} for {}, {}'.format(Trc.get_biggest_expanse().expense, Trc.get_biggest_expanse(
        ).category, Trc.get_biggest_expanse().description))
        print('Total by categories: ')
        for category in ctg.get_categories_names():
            print('{}: {} ({}%)'.format(category, Trc.get_total_by_category(category), round(Trc.get_total_by_category(
                category)/Trc.get_total()*100)))
    else:
        print('There are no statistics available cause you did not add any transactions!')
    main_menu()


def menu_change(choice):
    menu_map[choice]()


menu_map = {
    '1': track_transaction,
    '2': record_payment,
    '3': history,
    '4': statistics,
    '5': add_remove_category,
    '6': update_limits,
    '7': manage_periods
}

main_menu()
